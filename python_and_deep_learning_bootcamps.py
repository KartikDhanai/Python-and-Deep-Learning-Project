# -*- coding: utf-8 -*-
"""Python and Deep Learning Bootcamps.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rdYvhnLi2ZlMK91Fpc9ABm1fs86btrz9

# Libraries of Deep Learning

1. Theano
2.Keras
3.Tensorflow
4. PyTorch

# Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import tensorflow as tf
from tensorflow import keras

"""# Importing the dataset"""

data = keras.datasets.mnist

data

df = data.load_data()

df

(X_train, y_train),(X_test, y_test) = df

X_train.shape

X_test.shape

X_train[0]

plt.matshow(X_train[0])

for i in range(10):
  plt.matshow(X_train[i])

y_test.shape

y_test.ndim

X_test.ndim

X_train_flat = X_train.reshape(-1,28*28)
X_test_flat = X_test.reshape(-1,28*28)

X_train_flat[0].ndim

"""# ANN Model Creation

"""

from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense

model = Sequential([
    # First Hidden Layer
    Dense(units=10,
          input_shape=(784,),
          activation='sigmoid')
])

model.compile(
    optimizer='adam',
    loss='sparse_categorical_crossentropy',
    metrics =['accuracy']
)



"""# Training Our Model"""

model.fit(X_train_flat,y_train,epochs=10) 
# epochs says how many times u want your model to see the data
# more the epochs , higher will be the accuracy

y_pred = model.predict(X_test_flat)

y_pred

y_test

model.evaluate(X_test_flat, y_test)